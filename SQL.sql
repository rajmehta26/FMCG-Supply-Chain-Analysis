-- CITY WISE CATEGORY BASED ORDERS

WITH ORDER_CTE AS (
SELECT 
	CITY AS CITY,
	CATEGORY AS CATEGORY,
	SUM(ORDER_QTY) AS TOTAL_ORDERS,
	SUM (SUM(ORDER_QTY)) OVER ( 
		PARTITION BY CITY
		ORDER BY CITY
		) AS CITY_TOTAL
FROM 
	DIM_CUSTOMERS AS C
JOIN 
	[DBO].[FACT_ORDER_LINES] AS OL
ON 
	C.CUSTOMER_ID = OL.CUSTOMER_ID
JOIN 
	[DBO].[DIM_PRODUCTS] AS P
ON 
	OL.PRODUCT_ID = P.PRODUCT_ID
GROUP BY 
	CITY, CATEGORY
)
SELECT 
	*,
	CAST( 100.0*(TOTAL_ORDERS)/(CITY_TOTAL) AS NUMERIC(5,2) ) AS "% OF CITY ORDERS"
FROM
	ORDER_CTE
ORDER BY 
	CITY
;

-- CITY WISE OT%, IF% AND OTIF%
SELECT        
	C.CITY AS CITY,
	100 * SUM ( CASE WHEN ON_TIME = 1 THEN 1 ELSE 0 END ) / COUNT (*) AS "OT%",
	100 * SUM ( CASE WHEN IN_FULL = 1 THEN 1 ELSE 0 END ) / COUNT (*) AS "IF%",
	100 * SUM ( CASE WHEN OTIF = 1 THEN 1 ELSE 0 END ) / COUNT (*) AS "OTIF%"
FROM 
	[DBO].[FACT_ORDERS_AGGREGATE] AS OA
JOIN
	[DBO].[DIM_CUSTOMERS] AS C
ON 
	OA.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY
	CITY
;

-- CUSTOMER WISE MOST ORDERED & LEAST ORDERED

WITH ORDER_CTE AS (
SELECT 
	CUSTOMER_NAME AS CUSTOMERS,
	PRODUCT_NAME AS PRODUCT,
	SUM(ORDER_QTY) AS TOTAL_ORDERS
FROM 
	 [DBO].[DIM_CUSTOMERS] AS C
JOIN [DBO].[FACT_ORDER_LINES] AS OL
	ON C.CUSTOMER_ID = OL.CUSTOMER_ID
JOIN [DBO].[DIM_PRODUCTS] AS P
	ON OL.PRODUCT_ID = P.PRODUCT_ID
GROUP BY 
	CUSTOMER_NAME, PRODUCT_NAME
), MAX_MIN_ORDERS AS (
SELECT 
	*,
	ROW_NUMBER() OVER (PARTITION BY CUSTOMERS ORDER BY TOTAL_ORDERS DESC) AS RNK_MAX,
	ROW_NUMBER() OVER (PARTITION BY CUSTOMERS ORDER BY TOTAL_ORDERS ASC) AS RNK_MIN
FROM
	ORDER_CTE 
)
SELECT 
	CUSTOMERS,
	MAX ( CASE WHEN RNK_MAX = 1 THEN PRODUCT END ) AS 'MOST ORDERED',
	MIN ( CASE WHEN RNK_MIN = 1 THEN PRODUCT END ) AS 'LEAST ORDERED'
FROM
	MAX_MIN_ORDERS
GROUP BY
	CUSTOMERS
;

-- CUSTOMERWISE DEVIATION OF KPI'S (OT, IF, OTIF) FROM TARGET
SELECT
	C.CUSTOMER_NAME AS CUSTOMER,
	(100 * SUM ( CASE WHEN [ON_TIME] = 1 THEN 1 ELSE 0 END) / COUNT ( * )) - AVG ( [ONTIME_TARGET%] ) AS "OT DEVIATION %",
	(100 * SUM ( CASE WHEN [IN_FULL] = 1 THEN 1 ELSE 0 END) / COUNT ( * )) - AVG ( [INFULL_TARGET%] ) AS "IF DEVIATION %",
	(100 * SUM ( CASE WHEN [OTIF] = 1 THEN 1 ELSE 0 END) / COUNT ( * )) - AVG ( [OTIF_TARGET%] ) AS "OTIF DEVIATION %"
FROM
	[DBO].[DIM_TARGETS_ORDERS] AS TGT
JOIN 
	[DBO].[DIM_CUSTOMERS] AS C
ON 
	TGT.CUSTOMER_ID = C.CUSTOMER_ID
JOIN 
	[DBO].[FACT_ORDERS_AGGREGATE] AS OA
ON 
	OA.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY 
	CUSTOMER_NAME
;

-- CUSTOMERWISE TOTAL ORDERS V/S AVERAGE DELIVERY TIME
SELECT
	 C.CUSTOMER_NAME AS CUSTOMER,
	 COUNT ([ORDER_QTY]) AS "TOTAL ORDERS",
	 CAST ( AVG ( DATEDIFF( DD, OL.ORDER_PLACEMENT_DATE, OL.ACTUAL_DELIVERY_DATE )*1.0 ) AS NUMERIC(5,2) ) AS "AVG. DELIVERY DAYS"
FROM
	[DBO].[FACT_ORDER_LINES] AS OL
JOIN 
	[DBO].[DIM_CUSTOMERS] AS C
ON 
	OL.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY
	CUSTOMER_NAME
ORDER BY
	[TOTAL ORDERS] DESC
;
	
-- WEEKLY TRENDS OF OT%, IF% AND OTIF%
SELECT
	DT.WEEK_NO AS "WEEK NO.",
	SUM ( OL.ORDER_QTY ) AS "TOTAL ORDERS",
	100 * SUM ( CASE WHEN ON_TIME = 1 THEN 1 ELSE 0 END ) / COUNT (*) AS "OT%",
	100 * SUM ( CASE WHEN IN_FULL = 1 THEN 1 ELSE 0 END ) / COUNT (*) AS "IF%",
	100 * SUM ( CASE WHEN [ON_TIME_IN_FULL] = 1 THEN 1 ELSE 0 END ) / COUNT (*) AS "OTIF%"
FROM
	[DBO].[DIM_DATE] AS DT
JOIN
	[DBO].[FACT_ORDER_LINES] AS OL
ON
	OL.ORDER_PLACEMENT_DATE = DT.DATE
GROUP BY
	WEEK_NO
;

-- WEEK OVER WEEK PERCENTAGE CHANGE IN ORDERS
WITH LEAD_CTE AS (
SELECT
	DT.WEEK_NO AS "WEEK NO.",
	SUM ( OL.ORDER_QTY ) AS "TOTAL ORDERS",
	LEAD (SUM ( OL.ORDER_QTY )) OVER (ORDER BY DT.WEEK_NO ) AS "NEXT WEEK ORDERS"
FROM
	[DBO].[DIM_DATE] AS DT
JOIN
	[DBO].[FACT_ORDER_LINES] AS OL
ON
	OL.ORDER_PLACEMENT_DATE = DT.DATE
GROUP BY
	WEEK_NO
)
SELECT
	"WEEK NO.",
	CAST ( 100.0 * ([NEXT WEEK ORDERS] - [TOTAL ORDERS])/[TOTAL ORDERS] AS NUMERIC(5,2) ) AS "% CHANGE IN ORDERS"
FROM
	LEAD_CTE
;

-- CUSTOMER CONTRIBUTING TO 70% OF THE TOTAL ORDERS &/OR TOPN CONTRIBUTE TO X% OF TOTAL ORDERS
WITH CUST_ORDERS_CTE AS (
SELECT
	C.CUSTOMER_NAME AS CUSTOMER,
	SUM ( [ORDER_QTY] ) AS "TOTAL ORDERS"
FROM
	[DBO].[FACT_ORDER_LINES] AS OL
JOIN
	[DBO].[DIM_CUSTOMERS] AS C
ON
	OL.CUSTOMER_ID = C.CUSTOMER_ID
GROUP BY
	CUSTOMER_NAME
), RUNNING_SUM_CTE AS (
SELECT
	*,
	SUM([TOTAL ORDERS]) OVER (ORDER BY [TOTAL ORDERS] DESC ROWS BETWEEN UNBOUNDED PRECEDING AND CURRENT ROW) AS "ROLLING SUM",
	0.7 * SUM([TOTAL ORDERS]) OVER () AS "70% OF TOTAL ORDERS"
FROM
	CUST_ORDERS_CTE
)
SELECT
	CUSTOMER,
	CAST ( 100.0 * [ROLLING SUM]/SUM([TOTAL ORDERS]) OVER () AS NUMERIC(5,2) ) AS "ROLLING %"
FROM
	RUNNING_SUM_CTE
GROUP BY
	CUSTOMER, [TOTAL ORDERS], [ROLLING SUM], [70% OF TOTAL ORDERS]
;
